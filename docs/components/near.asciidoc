NEAR(9) HAL Component NEAR(9)

INSTANTIABLE COMPONENTS

----------------------------------------------------------------------------------------------------
   All instantiable components can be loaded in two manners


   Using loadrt with or without count= | names= parameters as per legacy components


   Using newinst, which names the instance and allows further parameters and arguments,


   primarily pincount= which can set the number of pins created for that instance (where applicable)
----------------------------------------------------------------------------------------------------

NAME

---------------------------------------------------------
   near - Determine whether two values are roughly equal.
---------------------------------------------------------

SYNOPSIS

-------
   near
-------

USAGE SYNOPSIS

------------------------------------------------------------------------------------------
   loadrt near

   newinst near <newinstname> [ pincount=N | iprefix=prefix ] [instanceparamX=X | argX=X ]
------------------------------------------------------------------------------------------

FUNCTIONS

-----------------------------------------------------------------------
   near.N.funct
          ( OR <newinstname>.funct (requires a floating-point thread) )
-----------------------------------------------------------------------

PINS

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   near.N.in1_  float in
          ( OR <newinstname>.in1_  float in  )


   near.N.in2_  float in
          ( OR <newinstname>.in2_  float in  )


   near.N.scale  float io (default: 1.0)
          ( OR <newinstname>.scale  float io (default: 1.0) )


   near.N.difference  float io (default: 0.0)
          ( OR <newinstname>.difference  float io (default: 0.0) )


   near.N.out  bit out
          ( OR <newinstname>.out  bit out  )




          out  is true if in1 and in2 are within a factor of scale (i.e., for in1 positive, in1/scale <= in2 <= in1*scale), OR if their absolute difference is no greater than difference (i.e., |in1-in2|
          <= difference).  out is false otherwise.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

LICENSE

------
   GPL
------

Machinekit Documentation 2015-11-01 NEAR(9)
