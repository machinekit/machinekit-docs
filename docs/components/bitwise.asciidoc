BITWISE(9) HAL Component BITWISE(9)

INSTANTIABLE COMPONENTS

----------------------------------------------------------------------------------------------------
   All instantiable components can be loaded in two manners


   Using loadrt with or without count= | names= parameters as per legacy components


   Using newinst, which names the instance and allows further parameters and arguments,


   primarily pincount= which can set the number of pins created for that instance (where applicable)
----------------------------------------------------------------------------------------------------

NAME

------------------------------------------------------------------------
   bitwise - Computes various bitwise operations on the two input values
------------------------------------------------------------------------

SYNOPSIS

----------
   bitwise
----------

USAGE SYNOPSIS

---------------------------------------------------------------------------------------------
   loadrt bitwise

   newinst bitwise <newinstname> [ pincount=N | iprefix=prefix ] [instanceparamX=X | argX=X ]
---------------------------------------------------------------------------------------------

FUNCTIONS

-------------------------------------
   bitwise.N.funct
          ( OR <newinstname>.funct  )
-------------------------------------

PINS

-------------------------------------------------
   bitwise.N.in0  u32 in
          ( OR <newinstname>.in0  u32 in  )


   First input value

   bitwise.N.in1  u32 in
          ( OR <newinstname>.in1  u32 in  )


   Second input value

   bitwise.N.out-and  u32 out
          ( OR <newinstname>.out-and  u32 out  )


   The bitwise AND of the two inputs

   bitwise.N.out-or  u32 out
          ( OR <newinstname>.out-or  u32 out  )


   The bitwise OR of the two inputs

   bitwise.N.out-xor  u32 out
          ( OR <newinstname>.out-xor  u32 out  )


   The bitwise XOR of the two inputs

   bitwise.N.out-nand  u32 out
          ( OR <newinstname>.out-nand  u32 out  )


   The inverse of the bitwise AND

   bitwise.N.out-nor  u32 out
          ( OR <newinstname>.out-nor  u32 out  )


   The inverse of the bitwise OR

   bitwise.N.out-xnor  u32 out
          ( OR <newinstname>.out-xnor  u32 out  )


   The inverse of the bitwise XOR
-------------------------------------------------

AUTHOR

------------
   Andy Pugh
------------

LICENSE

---------
   GPL 2+
---------

Machinekit Documentation 2015-11-01 BITWISE(9)
