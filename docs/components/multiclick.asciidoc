MULTICLICK(9) HAL Component MULTICLICK(9)

INSTANTIABLE COMPONENTS

----------------------------------------------------------------------------------------------------
   All instantiable components can be loaded in two manners


   Using loadrt with or without count= | names= parameters as per legacy components


   Using newinst, which names the instance and allows further parameters and arguments,


   primarily pincount= which can set the number of pins created for that instance (where applicable)
----------------------------------------------------------------------------------------------------

NAME

-----------------------------------------------------------------------
   multiclick - Single-, double-, triple-, and quadruple-click detector
-----------------------------------------------------------------------

SYNOPSIS

-------------
   multiclick
-------------

USAGE SYNOPSIS

------------------------------------------------------------------------------------------------
   loadrt multiclick

   newinst multiclick <newinstname> [ pincount=N | iprefix=prefix ] [instanceparamX=X | argX=X ]
------------------------------------------------------------------------------------------------

DESCRIPTION

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   A click is defined as a rising edge on the 'in' pin, followed by the 'in' pin being True for at most 'max-hold-ns' nanoseconds, followed by a falling edge.

          A double-click is defined as two clicks, separated by at most 'max-space-ns' nanoseconds with the 'in' pin in the False state.

          I bet you can guess the definition of triple- and quadruple-click.

          You probably want to run the input signal through a debounce component before feeding it to the multiclick detector, if the input is at all noisy.

          The '*-click' pins go high as soon as the input detects the correct number of clicks.

          The '*-click-only' pins go high a short while after the click, after the click separator space timeout has expired to show that no further click is coming.  This is useful for triggering halui
          MDI commands.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

FUNCTIONS

---------------------------------------------------------
   multiclick.N.funct
          ( OR <newinstname>.funct  )

   Detect single-, double-, triple-, and quadruple-clicks
---------------------------------------------------------

PINS

-----------------------------------------------------------------------------------------------------------------
   multiclick.N.in  bit in
          ( OR <newinstname>.in  bit in  )


   The input line, this is where we look for clicks.

   multiclick.N.single_click  bit out
          ( OR <newinstname>.single_click  bit out  )


   Goes high briefly when a single-click is detected on the 'in' pin.

   multiclick.N.single_click_only  bit out
          ( OR <newinstname>.single_click_only  bit out  )


   Goes high briefly when a single-click is detected on the 'in' pin and no second click followed it.

   multiclick.N.double_click  bit out
          ( OR <newinstname>.double_click  bit out  )


   Goes high briefly when a double-click is detected on the 'in' pin.

   multiclick.N.double_click_only  bit out
          ( OR <newinstname>.double_click_only  bit out  )


   Goes high briefly when a double-click is detected on the 'in' pin and no third click followed it.

   multiclick.N.triple_click  bit out
          ( OR <newinstname>.triple_click  bit out  )


   Goes high briefly when a triple-click is detected on the 'in' pin.

   multiclick.N.triple_click_only  bit out
          ( OR <newinstname>.triple_click_only  bit out  )


   Goes high briefly when a triple-click is detected on the 'in' pin and no fourth click followed it.

   multiclick.N.quadruple_click  bit out
          ( OR <newinstname>.quadruple_click  bit out  )


   Goes high briefly when a quadruple-click is detected on the 'in' pin.

   multiclick.N.quadruple_click_only  bit out
          ( OR <newinstname>.quadruple_click_only  bit out  )


   Goes high briefly when a quadruple-click is detected on the 'in' pin and no fifth click followed it.

   multiclick.N.state  s32 out
          ( OR <newinstname>.state  s32 out  )


   multiclick.N.invert_input  bit io (default: false)
          ( OR <newinstname>.invert_input  bit io (default: false) )


   If false (the default), clicks start with rising edges.  If true, clicks start with falling edges.

   multiclick.N.max_hold_ns  u32 io (default: 250000000)
          ( OR <newinstname>.max_hold_ns  u32 io (default: 250000000) )


   If the input is held down longer than this, it's not part of a multi-click.  (Default 250,000,000 ns, 250 ms.)

   multiclick.N.max_space_ns  u32 io (default: 250000000)
          ( OR <newinstname>.max_space_ns  u32 io (default: 250000000) )


   If the input is released longer than this, it's not part of a multi-click.  (Default 250,000,000 ns, 250 ms.)

   multiclick.N.output_hold_ns  u32 io (default: 100000000)
          ( OR <newinstname>.output_hold_ns  u32 io (default: 100000000) )


   Positive pulses on the output pins last this long.  (Default 100,000,000 ns, 100 ms.)
-----------------------------------------------------------------------------------------------------------------

LICENSE

------
   GPL
------

Machinekit Documentation 2015-11-01 MULTICLICK(9)
